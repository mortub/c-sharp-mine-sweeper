//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserExistsFault", Namespace="http://schemas.datacontract.org/2004/07/WcfMSServer")]
    [System.SerializableAttribute()]
    public partial class UserExistsFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clients", Namespace="http://schemas.datacontract.org/2004/07/WcfMSServer")]
    [System.SerializableAttribute()]
    public partial class Clients : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MSClient.ServiceReference1.Games[] GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSClient.ServiceReference1.Games[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Games", Namespace="http://schemas.datacontract.org/2004/07/WcfMSServer")]
    [System.SerializableAttribute()]
    public partial class Games : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MSClient.ServiceReference1.Clients[] ClientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WinnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool tieField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSClient.ServiceReference1.Clients[] Clients {
            get {
                return this.ClientsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientsField, value) != true)) {
                    this.ClientsField = value;
                    this.RaisePropertyChanged("Clients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndingDate {
            get {
                return this.EndingDateField;
            }
            set {
                if ((this.EndingDateField.Equals(value) != true)) {
                    this.EndingDateField = value;
                    this.RaisePropertyChanged("EndingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loser {
            get {
                return this.LoserField;
            }
            set {
                if ((object.ReferenceEquals(this.LoserField, value) != true)) {
                    this.LoserField = value;
                    this.RaisePropertyChanged("Loser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Winner {
            get {
                return this.WinnerField;
            }
            set {
                if ((object.ReferenceEquals(this.WinnerField, value) != true)) {
                    this.WinnerField = value;
                    this.RaisePropertyChanged("Winner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool tie {
            get {
                return this.tieField;
            }
            set {
                if ((this.tieField.Equals(value) != true)) {
                    this.tieField = value;
                    this.RaisePropertyChanged("tie");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMSService", CallbackContract=typeof(MSClient.ServiceReference1.IMSServiceCallback))]
    public interface IMSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ClientConnected", ReplyAction="http://tempuri.org/IMSService/ClientConnectedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MSClient.ServiceReference1.UserExistsFault), Action="http://tempuri.org/IMSService/ClientConnectedUserExistsFaultFault", Name="UserExistsFault", Namespace="http://schemas.datacontract.org/2004/07/WcfMSServer")]
        void ClientConnected(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ClientConnected", ReplyAction="http://tempuri.org/IMSService/ClientConnectedResponse")]
        System.Threading.Tasks.Task ClientConnectedAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ClientDisconnected", ReplyAction="http://tempuri.org/IMSService/ClientDisconnectedResponse")]
        void ClientDisconnected(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ClientDisconnected", ReplyAction="http://tempuri.org/IMSService/ClientDisconnectedResponse")]
        System.Threading.Tasks.Task ClientDisconnectedAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SearchUsernamePasswordInDB", ReplyAction="http://tempuri.org/IMSService/SearchUsernamePasswordInDBResponse")]
        bool SearchUsernamePasswordInDB(MSClient.ServiceReference1.Clients client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SearchUsernamePasswordInDB", ReplyAction="http://tempuri.org/IMSService/SearchUsernamePasswordInDBResponse")]
        System.Threading.Tasks.Task<bool> SearchUsernamePasswordInDBAsync(MSClient.ServiceReference1.Clients client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/EnterClientToDB", ReplyAction="http://tempuri.org/IMSService/EnterClientToDBResponse")]
        bool EnterClientToDB(MSClient.ServiceReference1.Clients client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/EnterClientToDB", ReplyAction="http://tempuri.org/IMSService/EnterClientToDBResponse")]
        System.Threading.Tasks.Task<bool> EnterClientToDBAsync(MSClient.ServiceReference1.Clients client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SendRequest", ReplyAction="http://tempuri.org/IMSService/SendRequestResponse")]
        void SendRequest(string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SendRequest", ReplyAction="http://tempuri.org/IMSService/SendRequestResponse")]
        System.Threading.Tasks.Task SendRequestAsync(string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowAllPlayers", ReplyAction="http://tempuri.org/IMSService/ShowAllPlayersResponse")]
        string[][] ShowAllPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowAllPlayers", ReplyAction="http://tempuri.org/IMSService/ShowAllPlayersResponse")]
        System.Threading.Tasks.Task<string[][]> ShowAllPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowAllGames", ReplyAction="http://tempuri.org/IMSService/ShowAllGamesResponse")]
        string[][] ShowAllGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowAllGames", ReplyAction="http://tempuri.org/IMSService/ShowAllGamesResponse")]
        System.Threading.Tasks.Task<string[][]> ShowAllGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SendRequestDenied", ReplyAction="http://tempuri.org/IMSService/SendRequestDeniedResponse")]
        void SendRequestDenied(string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/SendRequestDenied", ReplyAction="http://tempuri.org/IMSService/SendRequestDeniedResponse")]
        System.Threading.Tasks.Task SendRequestDeniedAsync(string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/OpenBoardGame", ReplyAction="http://tempuri.org/IMSService/OpenBoardGameResponse")]
        void OpenBoardGame(string fromClient, string toClient, int size, int mines, System.Tuple<int, int>[] minesPositions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/OpenBoardGame", ReplyAction="http://tempuri.org/IMSService/OpenBoardGameResponse")]
        System.Threading.Tasks.Task OpenBoardGameAsync(string fromClient, string toClient, int size, int mines, System.Tuple<int, int>[] minesPositions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallButtonClick", ReplyAction="http://tempuri.org/IMSService/CallButtonClickResponse")]
        void CallButtonClick(int row, int col, int tag, string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallButtonClick", ReplyAction="http://tempuri.org/IMSService/CallButtonClickResponse")]
        System.Threading.Tasks.Task CallButtonClickAsync(int row, int col, int tag, string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallRightButtonClick", ReplyAction="http://tempuri.org/IMSService/CallRightButtonClickResponse")]
        void CallRightButtonClick(int row, int col, int tag, string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallRightButtonClick", ReplyAction="http://tempuri.org/IMSService/CallRightButtonClickResponse")]
        System.Threading.Tasks.Task CallRightButtonClickAsync(int row, int col, int tag, string fromClient, string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallYouWin", ReplyAction="http://tempuri.org/IMSService/CallYouWinResponse")]
        void CallYouWin(string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallYouWin", ReplyAction="http://tempuri.org/IMSService/CallYouWinResponse")]
        System.Threading.Tasks.Task CallYouWinAsync(string toClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/GameConnect", ReplyAction="http://tempuri.org/IMSService/GameConnectResponse")]
        void GameConnect(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/GameConnect", ReplyAction="http://tempuri.org/IMSService/GameConnectResponse")]
        System.Threading.Tasks.Task GameConnectAsync(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/GameDisconnect", ReplyAction="http://tempuri.org/IMSService/GameDisconnectResponse")]
        void GameDisconnect(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/GameDisconnect", ReplyAction="http://tempuri.org/IMSService/GameDisconnectResponse")]
        System.Threading.Tasks.Task GameDisconnectAsync(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/EnterGameToDB", ReplyAction="http://tempuri.org/IMSService/EnterGameToDBResponse")]
        void EnterGameToDB(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/EnterGameToDB", ReplyAction="http://tempuri.org/IMSService/EnterGameToDBResponse")]
        System.Threading.Tasks.Task EnterGameToDBAsync(MSClient.ServiceReference1.Games game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowOngoingGames", ReplyAction="http://tempuri.org/IMSService/ShowOngoingGamesResponse")]
        string[] ShowOngoingGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/ShowOngoingGames", ReplyAction="http://tempuri.org/IMSService/ShowOngoingGamesResponse")]
        System.Threading.Tasks.Task<string[]> ShowOngoingGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallUserExit", ReplyAction="http://tempuri.org/IMSService/CallUserExitResponse")]
        void CallUserExit(string Username, string Rival);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSService/CallUserExit", ReplyAction="http://tempuri.org/IMSService/CallUserExitResponse")]
        System.Threading.Tasks.Task CallUserExitAsync(string Username, string Rival);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/PutMessage")]
        void PutMessage(string message, string fromClient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/UpdateClientsList")]
        void UpdateClientsList(string[] clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/PutRequest")]
        void PutRequest(string fromClient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/RequestDenied")]
        void RequestDenied(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/OpenGame")]
        void OpenGame(string fromClient, int size, int mines, System.Tuple<int, int>[] minesPositions, bool flag);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/Button_Click_Reaction")]
        void Button_Click_Reaction(int row, int col, int tag, string fromClient, string other);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/Right_Button_Click_Reaction")]
        void Right_Button_Click_Reaction(int row, int col, int tag, string fromClient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/YouWin")]
        void YouWin();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMSService/UserExit")]
        void UserExit(string activator, string other);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSServiceChannel : MSClient.ServiceReference1.IMSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MSServiceClient : System.ServiceModel.DuplexClientBase<MSClient.ServiceReference1.IMSService>, MSClient.ServiceReference1.IMSService {
        
        public MSServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MSServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MSServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MSServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MSServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ClientConnected(string username) {
            base.Channel.ClientConnected(username);
        }
        
        public System.Threading.Tasks.Task ClientConnectedAsync(string username) {
            return base.Channel.ClientConnectedAsync(username);
        }
        
        public void ClientDisconnected(string username) {
            base.Channel.ClientDisconnected(username);
        }
        
        public System.Threading.Tasks.Task ClientDisconnectedAsync(string username) {
            return base.Channel.ClientDisconnectedAsync(username);
        }
        
        public bool SearchUsernamePasswordInDB(MSClient.ServiceReference1.Clients client) {
            return base.Channel.SearchUsernamePasswordInDB(client);
        }
        
        public System.Threading.Tasks.Task<bool> SearchUsernamePasswordInDBAsync(MSClient.ServiceReference1.Clients client) {
            return base.Channel.SearchUsernamePasswordInDBAsync(client);
        }
        
        public bool EnterClientToDB(MSClient.ServiceReference1.Clients client) {
            return base.Channel.EnterClientToDB(client);
        }
        
        public System.Threading.Tasks.Task<bool> EnterClientToDBAsync(MSClient.ServiceReference1.Clients client) {
            return base.Channel.EnterClientToDBAsync(client);
        }
        
        public void SendRequest(string fromClient, string toClient) {
            base.Channel.SendRequest(fromClient, toClient);
        }
        
        public System.Threading.Tasks.Task SendRequestAsync(string fromClient, string toClient) {
            return base.Channel.SendRequestAsync(fromClient, toClient);
        }
        
        public string[][] ShowAllPlayers() {
            return base.Channel.ShowAllPlayers();
        }
        
        public System.Threading.Tasks.Task<string[][]> ShowAllPlayersAsync() {
            return base.Channel.ShowAllPlayersAsync();
        }
        
        public string[][] ShowAllGames() {
            return base.Channel.ShowAllGames();
        }
        
        public System.Threading.Tasks.Task<string[][]> ShowAllGamesAsync() {
            return base.Channel.ShowAllGamesAsync();
        }
        
        public void SendRequestDenied(string fromClient, string toClient) {
            base.Channel.SendRequestDenied(fromClient, toClient);
        }
        
        public System.Threading.Tasks.Task SendRequestDeniedAsync(string fromClient, string toClient) {
            return base.Channel.SendRequestDeniedAsync(fromClient, toClient);
        }
        
        public void OpenBoardGame(string fromClient, string toClient, int size, int mines, System.Tuple<int, int>[] minesPositions) {
            base.Channel.OpenBoardGame(fromClient, toClient, size, mines, minesPositions);
        }
        
        public System.Threading.Tasks.Task OpenBoardGameAsync(string fromClient, string toClient, int size, int mines, System.Tuple<int, int>[] minesPositions) {
            return base.Channel.OpenBoardGameAsync(fromClient, toClient, size, mines, minesPositions);
        }
        
        public void CallButtonClick(int row, int col, int tag, string fromClient, string toClient) {
            base.Channel.CallButtonClick(row, col, tag, fromClient, toClient);
        }
        
        public System.Threading.Tasks.Task CallButtonClickAsync(int row, int col, int tag, string fromClient, string toClient) {
            return base.Channel.CallButtonClickAsync(row, col, tag, fromClient, toClient);
        }
        
        public void CallRightButtonClick(int row, int col, int tag, string fromClient, string toClient) {
            base.Channel.CallRightButtonClick(row, col, tag, fromClient, toClient);
        }
        
        public System.Threading.Tasks.Task CallRightButtonClickAsync(int row, int col, int tag, string fromClient, string toClient) {
            return base.Channel.CallRightButtonClickAsync(row, col, tag, fromClient, toClient);
        }
        
        public void CallYouWin(string toClient) {
            base.Channel.CallYouWin(toClient);
        }
        
        public System.Threading.Tasks.Task CallYouWinAsync(string toClient) {
            return base.Channel.CallYouWinAsync(toClient);
        }
        
        public void GameConnect(MSClient.ServiceReference1.Games game) {
            base.Channel.GameConnect(game);
        }
        
        public System.Threading.Tasks.Task GameConnectAsync(MSClient.ServiceReference1.Games game) {
            return base.Channel.GameConnectAsync(game);
        }
        
        public void GameDisconnect(MSClient.ServiceReference1.Games game) {
            base.Channel.GameDisconnect(game);
        }
        
        public System.Threading.Tasks.Task GameDisconnectAsync(MSClient.ServiceReference1.Games game) {
            return base.Channel.GameDisconnectAsync(game);
        }
        
        public void EnterGameToDB(MSClient.ServiceReference1.Games game) {
            base.Channel.EnterGameToDB(game);
        }
        
        public System.Threading.Tasks.Task EnterGameToDBAsync(MSClient.ServiceReference1.Games game) {
            return base.Channel.EnterGameToDBAsync(game);
        }
        
        public string[] ShowOngoingGames() {
            return base.Channel.ShowOngoingGames();
        }
        
        public System.Threading.Tasks.Task<string[]> ShowOngoingGamesAsync() {
            return base.Channel.ShowOngoingGamesAsync();
        }
        
        public void CallUserExit(string Username, string Rival) {
            base.Channel.CallUserExit(Username, Rival);
        }
        
        public System.Threading.Tasks.Task CallUserExitAsync(string Username, string Rival) {
            return base.Channel.CallUserExitAsync(Username, Rival);
        }
    }
}
